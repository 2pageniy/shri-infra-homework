name: Release
run-name: Release ${{ github.run_number }}

on:
  workflow_dispatch:

permissions:
  contents: write


jobs:
  pipeline:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 20.x ]
        script: ['npm run lint', 'npm run test']
    steps:
      - uses: actions/checkout@v2
      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: install modules
        run: npm ci
      - name: Run script
        run: ${{ matrix.script }}

  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 20.x ]
    steps:
      - uses: actions/checkout@v4
      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Create Release
        uses: actions/checkout@v2
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      - name: Set tag release commit
        run: |
          git tag -a v${{ github.run_number }} -m "version ${{ github.run_number }} release"
          git push origin --tags
      - name: Create new branch
        run: |
          git checkout -b release/${{ github.run_number }}
          git push origin release/${{ github.run_number }}
      #      - name: Docker login cr yandex
      #        run: docker login --username oauth --password ${{ secrets.OAUTH_TOKEN }} cr.yandex
      #      - name: Build docker
      #        run: npm run build:docker
      #      - name: Tag image
      #        run: |
      #          docker tag hw_store:shri-infra cr.yandex/crpuv35ridrbq7gl8980/app:${{ github.run_number }}
      #          docker tag hw_store:shri-infra cr.yandex/crpuv35ridrbq7gl8980/app:${{ github.run_number }}_latest
      #      - name: Push image
      #        run: |
      #          docker push cr.yandex/crpuv35ridrbq7gl8980/app:${{ github.run_number }}
      #          docker push cr.yandex/crpuv35ridrbq7gl8980/app:${{ github.run_number }}_latest
      - name: Get current date
        run: echo "CURRENT_DATE=$(date +'%d-%m-%Y')" >> $GITHUB_ENV
      - name: Get all commits
        id: commits
        run: |
          current_version=${{ github.run_number }}
          prev_version=$((current_version - 1))
          git fetch --tags
          echo "commmits_content<<EOF" >> $GITHUB_ENV 
          echo $(git log --oneline v11..v21) >> $GITHUB_ENV 
          echo "EOF" >> $GITHUB_ENV
      - name: Create an issue
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ secrets.TOKEN }}
          title: Release ${{ github.run_number }}
          body: |
            ## Release ${{ github.run_number }}:
            Дата: ${{ env.CURRENT_DATE }}
            Автор: ${{ github.triggering_actor }}
            Номер версии: ${{ github.run_number }}
            Список коммитов: ${{ env.commmits_content }}
            Ссылка на docker-образ: cr.yandex/crpuv35ridrbq7gl8980/app:${{ github.run_number }}

      - name: Extract the changelog
        id: changelog
        run: |
          TAG_NAME=${GITHUB_REF/refs\/tags\//}
          READ_SECTION=false
          CHANGELOG=""
          while IFS= read -r line; do
          if [[ "$line" =~ ^#+\ +(.*) ]]; then
           if [[ "${BASH_REMATCH[1]}" == "$TAG_NAME" ]]; then
             READ_SECTION=true
           elif [[ "$READ_SECTION" == true ]]; then
             break
           fi
          elif [[ "$READ_SECTION" == true ]]; then
           CHANGELOG+="$line"$'\n'
          fi
          done < "CHANGELOG.md"
          CHANGELOG=$(echo "$CHANGELOG" | awk '/./ {$1=$1;print}')
          echo "changelog_content<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Create the release
        if: steps.changelog.outputs.changelog_content != ''
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          body: '${{ steps.changelog.outputs.changelog_content }}'
          draft: false
          prerelease: false